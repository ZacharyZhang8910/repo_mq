bi:
  version: @project.version@
  kafka:
    zkList: kafka01.idc1.fn:2181,kafka02.idc1.fn:2181,kafka03.idc1.fn:2181
    brokerList: kafka01.idc1.fn:9092,kafka02.idc1.fn:9092,kafka03.idc1.fn:9092
    serializer: kafka.serializer.StringEncoder
    producerType: async
    acks: 1
  sourceType:
    payQty1: [1, 2, 3, 10, 11, 12, 13, 20, 21, 22, 50, 51, 52, 53, 60]
    payQty2: [30, 40]
    dlvrQty1: [1, 3, 20, 21, 22]
    dlvrQty2: [2, 10, 11, 12, 13, 50, 51, 52, 53, 60]
    dlvrQty3: [30, 40]
    dlvrWeight1: [1, 3, 20, 21, 22]
    dlvrWeight2: [2, 10, 11, 12, 13, 50, 51, 52, 53, 60]
    dlvrWeight3: [30, 40]
    dlvrAmt1: [1, 20]
    dlvrAmt2: [2, 10, 11, 12, 13, 50, 51, 52, 53, 60]
    dlvrAmt3: [3, 21, 22, 30, 40]
    packageTime1: [2, 10, 11, 12, 13, 50, 51, 52, 60]
    packageTime2: [1, 3, 20, 21, 22, 30, 40, 53]
    pushTime1: [1, 2, 10, 11, 12, 13, 20, 21, 22, 30, 40, 50, 51, 52, 53, 60]
    pushTime2: [3]
    saleScope: [50, 51, 52]
    cusAmt: [12, 13]
    online: [2, 10, 11, 12, 13, 50]
  limit:
    sourceId:
      topic: [bi_all_pay_item, bi_all_dlvr_item, bi_rtac_pushtime_item]
      value: [2, 10, 11, 12, 13, 50]
      enabled: true
    xyp:
      topic: [bi_all_pay_item, bi_all_dlvr_item, bi_rtac_pushtime_item]
      value: txd_coupon_pkg
      enabled: true
    street:
      topic: [bi_all_pay_item, bi_all_dlvr_item, bi_rtac_pushtime_item]
      value: 1
      enabled: true
  rabbitmq:
    common:
      username: bi@rabbitmq
      password: bi@rabbitmq
      hosts: rabbitmq.idc1.fn:80
      virtualHost: /
    queue:
      bi_all_pay_item:
        exchangeName: order.wdk_order_datasync.orderCreate
        queueName: bi.birealtime.all.payorder
        routingKey: allpayorder
      bi_all_dlvr_item:
        exchangeName: order.wdk_order_datasync.packageTimeCreate
        queueName: bi.birealtime.all.dlvrorder
        routingKey: alldlvrorder
      bi_rtac_pay_item:
        exchangeName: order.wdk_order_datasync.orderCreate
        queueName: bi.birealtime.rtac.payorder
        routingKey: rtacpayorder
      bi_rtac_dlvr_item:
        exchangeName: order.wdk_order_datasync.packageTimeCreate
        queueName: bi.birealtime.rtac.dlvrorder
        routingKey: rtacdlvrorder
      bi_rtac_pushtime_item:
        exchangeName: order.order-storesync.push-order
        queueName: bi.realtime.rtac.pushtime.order
        routingKey: orderSyncRt
  api:
    mainOrder:
      url: http://wdk-ordersync.idc1.fn/table/getMainOrder
      statusField: code
      statusCode: '200'
      dataField: data
      dataType: JSONArray
    subOrder:
      url: http://wdk-ordersync.idc1.fn/table/getSubOrder
      statusField: code
      statusCode: '200'
      dataField: data
      dataType: JSONArray
    mcSubOrder:
      url: http://wdk-ordersync.idc1.fn/table/getMcSubOrder
      statusField: code
      statusCode: '200'
      dataField: data
      dataType: JSONArray
    promotion:
      url: http://wdk-ordersync.idc1.fn/table/getPromotion
      statusField: code
      statusCode: '200'
      dataField: data
      dataType: JSONArray
    goods:
      url: http://fresh-commodity-api.idc1.fn/rest/freshCommodity/rtGoodsInfo
      statusField: code
      statusCode: '200'
      dataField: data
      dataType: JSONArray
    store:
      url: http://store-center-api.idc1.fn/rest/StoreManage/getStoreInfosByStoreIdsOrName
      statusField: success
      statusCode: '1'
      dataField: data
      dataType: JSONObject
    offlineCate:
      url: http://rtgoodsservice.idc1.fn/rest/MerchantItems/getCateAndVatBySkuCodes
      statusField: success
      statusCode: '1'
      dataField: data
      dataType: JSONArray
    onlineChx:
      url: http://fnauth.idc1.fn/openapi/querySmallClass_FF.do
      statusField: Status
      statusCode: 'AF011007100'
      dataField: data
      dataType: JSONArray
    offlineChx:
      url: http://fnauth.idc1.fn/openapi/rt/querySmallClass.do
      statusField: Status
      statusCode: 'AF011007100'
      dataField: data
      dataType: JSONArray